name: "Run set of commands in Docker"
description: "Run commands in docker"

inputs:
  run_args:
    description: 'Commands to run in docker'
    required: true
  docker_image:
    description: 'Docker image to run commands in'
    required: false
    default: tt-metalium/ubuntu-20.04-amd64
  docker_image_arch:
    description: 'Is this a wormhole.b0, grayskull, or blackhole image'
    required: true
  docker_username:
    description: docker login username
    required: true
  docker_password:
    description: docker login password
    required: true
  docker_opts:
    description: 'Docker options'
    required: false
  device:
    description: "Description of Device as it is used in docker run command."
    type: string
    required: false
    default: |
      -v /dev/hugepages-1G:/dev/hugepages-1G
      --device /dev/tenstorrent
runs:
  using: "composite"
  steps:
    - name: Determine Docker Tag to use
      shell: bash
      run: |
        echo "IMAGE_TAG=latest" >> $GITHUB_ENV
    - name: Docker login
      uses: docker/login-action@v3
      with:
        registry: https://ghcr.io
        username: ${{ inputs.docker_username }}
        password: ${{ inputs.docker_password }}
    - name: Pull the latest version of the image
      shell: bash
      run: |
        docker pull ghcr.io/${{ github.repository }}/${{ inputs.docker_image }}:${{ env.IMAGE_TAG }}
    - uses: addnab/docker-run-action@v3
      with:
        shell: bash
        username: ${{ inputs.docker_username }}
        password: ${{ inputs.docker_password }}
        registry: ghcr.io
        image: ghcr.io/${{ github.repository }}/${{ inputs.docker_image }}:${{ env.IMAGE_TAG }}
        # The most important option below is `--rm`. The machines will fill up with containers.
        options: |
          --rm
          -v ${{ github.workspace }}:/github_workspace:ro
          --net=host
          ${{ inputs.docker_opts }}
          -e LOGURU_LEVEL=${{ env.LOGURU_LEVEL }}
          -e PYTHONPATH=/usr/app
          ${{ inputs.device }}
        run: |
          cp -r /github_workspace/* /usr/app/
          cd /usr/app/
          rm -rf tt_metal tt_eager
          ${{ inputs.run_args }}
